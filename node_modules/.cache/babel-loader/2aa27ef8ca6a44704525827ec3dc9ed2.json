{"ast":null,"code":"import axiosIntance from \"../helpers/axios\";\nimport { authConstants } from \"./constants\";\nexport const login = user => {\n  //console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axiosIntance.post('/admin/signin', { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'Fail to login'\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["E:/TaiLieuHocTap/Nodejs/ecommerce/admin-app/src/actions/auth.actions.js"],"names":["axiosIntance","authConstants","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem","parse"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAE3B;AACA,SAAO,MAAOC,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAa,CAACK;AAAtB,KAAD,CAAR;AAEA,UAAMC,GAAG,GAAG,MAAMP,YAAY,CAACQ,IAAb,CAAkB,eAAlB,EAAmC,EACjD,GAAGL;AAD8C,KAAnC,CAAlB;;AAIA,QAAGI,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClB,YAAM;AAACC,QAAAA,KAAD;AAAQP,QAAAA;AAAR,UAAiBI,GAAG,CAACI,IAA3B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAA7B;AACAC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACe,aADf;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACEP,UAAAA;AADF;AAFJ,OAAD,CAAR;AAMH,KAVD,MAUK;AACD,UAAGI,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBL,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEJ,aAAa,CAACiB,aADf;AAELD,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEZ,GAAG,CAACI,IAAJ,CAASQ;AAAlB;AAFJ,SAAD,CAAR;AAIH;AACJ;AAGJ,GA5BD;AA6BH,CAhCM;AAkCP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,MAAMhB,QAAN,IAAkB;AACrB,UAAMM,KAAK,GAAGE,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGX,KAAH,EAAS;AACL,YAAMP,IAAI,GAAGW,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACS,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAjB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACe,aADf;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACEP,UAAAA;AADF;AAFJ,OAAD,CAAR;AAMH,KARD,MAQK;AACDC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACiB,aADf;AAELD,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAFJ,OAAD,CAAR;AAIH;AACJ,GAhBD;AAiBH,CAlBM","sourcesContent":["import axiosIntance from \"../helpers/axios\";\r\nimport { authConstants } from \"./constants\"\r\n\r\nexport const login = (user) => {\r\n\r\n    //console.log(user);\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: authConstants.LOGIN_REQUEST });\r\n\r\n        const res = await axiosIntance.post('/admin/signin', {\r\n            ...user\r\n        });\r\n\r\n        if(res.status === 200){\r\n            const {token, user } = res.data;\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                })\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: { error: 'Fail to login' }\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}