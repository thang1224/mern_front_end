{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\TaiLieuHocTap\\\\Nodejs\\\\ecommerce\\\\admin-app\\\\src\\\\containers\\\\Products\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Col, Container, Row, Modal, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { useSelector } from 'react-redux';\n/**\r\n* @author\r\n* @function Products\r\n**/\n\nconst Products = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [price, setPrice] = useState('');\n  const [desceription, setDescription] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n  const category = useSelector(state => state.category);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const creatCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        creatCategoryList(category.children, options);\n      }\n    } //console.log(options);\n\n\n    return options;\n  };\n\n  const handleProductPictures = e => {\n    setProductPictures([...productPictures, e.target.files[0]]);\n  };\n\n  console.log(productPictures);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add new Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: 'Product Name',\n          value: name,\n          placeholder: 'Product Name',\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: 'Quantity',\n          value: quantity,\n          placeholder: 'Quantity',\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: 'Price',\n          value: price,\n          placeholder: 'Price',\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: 'Description',\n          value: desceription,\n          placeholder: 'Description',\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: categoryId,\n          onChange: e => setCategoryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), creatCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: [\" \", option.name, \" \"]\n          }, option.value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 43\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), productPictures.length > 0 ? productPictures.map((pic, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(pic)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 61\n        }, this)) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"productPicture\",\n          onChange: handleProductPictures\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Products, \"c7Sbyerj0nKf9K86f66M04X2BCc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["E:/TaiLieuHocTap/Nodejs/ecommerce/admin-app/src/containers/Products/index.js"],"names":["React","useState","Layout","Col","Container","Row","Modal","Button","Input","useSelector","Products","props","name","setName","quantity","setQuantity","price","setPrice","desceription","setDescription","categoryId","setCategoryId","productPictures","setProductPictures","show","setShow","category","state","handleClose","handleShow","creatCategoryList","categories","options","push","value","_id","children","length","handleProductPictures","e","target","files","console","log","display","justifyContent","map","option","pic","index","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from '../../components/Layout';\r\nimport { Col, Container, Row, Modal, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport { useSelector } from 'react-redux';\r\n\r\n/**\r\n* @author\r\n* @function Products\r\n**/\r\n\r\nconst Products = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [desceription, setDescription] = useState('');\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [productPictures, setProductPictures] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const category = useSelector(state => state.category);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n\r\n    const creatCategoryList = (categories, options = []) => {\r\n        for(let category of categories){\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name\r\n            });\r\n            if(category.children.length > 0){\r\n                creatCategoryList(category.children, options);\r\n            }\r\n        }\r\n        //console.log(options);\r\n        return options;\r\n    }\r\n\r\n    const handleProductPictures = (e) => {\r\n        setProductPictures([\r\n            ...productPictures,\r\n            e.target.files[0]\r\n        ]);\r\n    }\r\n\r\n    console.log(productPictures);\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Product</h3>\r\n                            <button onClick={handleShow}>Add</button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add new Product</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Input\r\n                        label={'Product Name'}\r\n                        value={name}\r\n                        placeholder={'Product Name'}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        label={'Quantity'}\r\n                        value={quantity}\r\n                        placeholder={'Quantity'}\r\n                        onChange={(e) => setQuantity(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        label={'Price'}\r\n                        value={price}\r\n                        placeholder={'Price'}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        label={'Description'}\r\n                        value={desceription}\r\n                        placeholder={'Description'}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    />\r\n                    <select \r\n                    className=\"form-control\"\r\n                    value={categoryId}\r\n                    onChange={ (e) => setCategoryId(e.target.value)}>\r\n                        <option>Select Category</option>\r\n                        {\r\n                            creatCategoryList(category.categories).map(\r\n                                option => <option key={option.value} value={option.value}> {option.name} </option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                    {\r\n                        productPictures.length > 0 ?\r\n                        productPictures.map((pic, index) => <div key={index}>{JSON.stringify(pic)}</div>) : null\r\n                    }\r\n                    <input type=\"file\" name=\"productPicture\" onChange={handleProductPictures} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Products"]},"metadata":{},"sourceType":"module"}