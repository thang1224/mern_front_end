{"ast":null,"code":"import { categoryContants } from '../actions/constants';\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {\n    if (parentId == undefined) {\n      return [...categories, {\n        _id: category._id,\n        name: category.name,\n        slug: category.slug,\n        children: []\n      }];\n    }\n\n    if (cat._id == parentId) {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case categoryContants.GET_CATEGORY_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryContants.ADD_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryContants.ADD_CATEGORY_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log(updatedCategories);\n      state = { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n\n    case categoryContants.ADD_CATEGORY_FAILURE:\n      state = { ...initState\n      };\n      break;\n  } //console.log(state);\n\n\n  return state;\n});","map":{"version":3,"sources":["E:/TaiLieuHocTap/Nodejs/ecommerce/admin-app/src/reducers/category.reducers.js"],"names":["categoryContants","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","cat","undefined","_id","name","slug","children","push","length","state","action","type","GET_CATEGORY_SUCCESS","payload","ADD_CATEGORY_REQUEST","ADD_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_CATEGORY_FAILURE"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,EADE;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWJ,UAAX,EAAuBK,QAAvB,KAAoC;AAC3D,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAI,IAAIC,GAAR,IAAeP,UAAf,EAA0B;AAEtB,QAAGI,QAAQ,IAAII,SAAf,EAAyB;AACrB,aAAO,CACH,GAAGR,UADA,EAEH;AACIS,QAAAA,GAAG,EAAEJ,QAAQ,CAACI,GADlB;AAEIC,QAAAA,IAAI,EAAEL,QAAQ,CAACK,IAFnB;AAGIC,QAAAA,IAAI,EAAEN,QAAQ,CAACM,IAHnB;AAIIC,QAAAA,QAAQ,EAAE;AAJd,OAFG,CAAP;AASH;;AAED,QAAGL,GAAG,CAACE,GAAJ,IAAWL,QAAd,EAAuB;AACnBE,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACd,GAAGN,GADW;AAEdK,QAAAA,QAAQ,EAAEL,GAAG,CAACK,QAAJ,GACVT,kBAAkB,CAACC,QAAD,EAAW,CAAC,GAAGG,GAAG,CAACK,QAAR,EAAkB;AAC3CH,UAAAA,GAAG,EAAEJ,QAAQ,CAACI,GAD6B;AAE3CC,UAAAA,IAAI,EAAEL,QAAQ,CAACK,IAF4B;AAG3CC,UAAAA,IAAI,EAAEN,QAAQ,CAACM,IAH4B;AAI3CP,UAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAJwB;AAK3CQ,UAAAA,QAAQ,EAAEP,QAAQ,CAACO;AALwB,SAAlB,CAAX,EAMdP,QANc,CADR,GAOM;AATF,OAAlB;AAWH,KAZD,MAYK;AACDC,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACd,GAAGN,GADW;AAEdK,QAAAA,QAAQ,EAAEL,GAAG,CAACK,QAAJ,IAAgBL,GAAG,CAACK,QAAJ,CAAaE,MAAb,GAAsB,CAAtC,GACVX,kBAAkB,CAACC,QAAD,EAAWG,GAAG,CAACK,QAAf,EAAyBP,QAAzB,CADR,GAC6C;AAHzC,OAAlB;AAKH;AAEJ;;AACD,SAAOC,YAAP;AACH,CAtCD;;AAwCA,gBAAe,CAACS,KAAK,GAAGhB,SAAT,EAAoBiB,MAApB,KAA+B;AAE1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKnB,gBAAgB,CAACoB,oBAAtB;AACIH,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJf,QAAAA,UAAU,EAAEgB,MAAM,CAACG,OAAP,CAAenB;AAFvB,OAAR;AAIA;;AACJ,SAAKF,gBAAgB,CAACsB,oBAAtB;AACIL,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJd,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,gBAAgB,CAACuB,oBAAtB;AACI,YAAMhB,QAAQ,GAAGW,MAAM,CAACG,OAAP,CAAed,QAAhC;AACA,YAAMiB,iBAAiB,GAAGnB,kBAAkB,CAACE,QAAQ,CAACD,QAAV,EAAoBW,KAAK,CAACf,UAA1B,EAAsCK,QAAtC,CAA5C;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AACAP,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJf,QAAAA,UAAU,EAAEsB,iBAFR;AAGJrB,QAAAA,OAAO,EAAE;AAHL,OAAR;AAKA;;AACJ,SAAKH,gBAAgB,CAAC2B,oBAAtB;AACIV,MAAAA,KAAK,GAAG,EACJ,GAAGhB;AADC,OAAR;AAGA;AA3BR,GAF0C,CA+B1C;;;AACA,SAAOgB,KAAP;AACH,CAjCD","sourcesContent":["import { categoryContants } from '../actions/constants';\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n    for(let cat of categories){\r\n\r\n        if(parentId == undefined){\r\n            return [\r\n                ...categories,\r\n                {\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    children: []\r\n                }\r\n            ];\r\n        }\r\n\r\n        if(cat._id == parentId){\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ?\r\n                buildNewCategories(parentId, [...cat.children, {\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    parentId: category.parentId,\r\n                    children: category.children\r\n                }], category) : []\r\n            });\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children && cat.children.length > 0 ?\r\n                buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n        \r\n    }\r\n    return myCategories;\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch(action.type){\r\n        case categoryContants.GET_CATEGORY_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryContants.ADD_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryContants.ADD_CATEGORY_SUCCESS:\r\n            const category = action.payload.category;\r\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n            console.log(updatedCategories);\r\n            state = {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryContants.ADD_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n    }\r\n    //console.log(state);\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}